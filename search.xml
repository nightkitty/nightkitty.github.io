<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[tst3]]></title>
    <url>%2F2019%2F02%2F03%2Ftst3%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[test.md]]></title>
    <url>%2F2019%2F02%2F03%2Ftest-md%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[my first blob with hexo]]></title>
    <url>%2F2019%2F02%2F02%2Fmy-first-blob-with-hexo%2F</url>
    <content type="text"><![CDATA[date: 2019-02-02 23:33:55 tags: types(类型) operators(运算符) expressions(表达式) 数据对象data objects分常量constants 和变量variables 声明语句declarations 声明data的type 符号常量 symbolic constants 1.变量命名规则变量只能通过大写upper字母、小写lower字母、数字digits、组成，并且变量首位必须为字母letters，插句话被看作letters共识：下划线underscore,_用于库文件,upper case 用于symbolic constant ,lower case 用于variable 2.Data types and Sizes限定符qualifiers qualifiers char int float double short/long O signed/unsigned O O 练习1编写一个程序以确定分别由signed及unsigned限定的char、short、int与long类型变量的取值范围。采用打印标准头文件中的相应值以及直接计算两种方式实现。(后一种方法的实现较困难一些，因为要确定各种浮点类型的取值范围) 1234567891011121314151617181920212223/*方案一*/#include&lt;stdio.h&gt;#include&lt;limits.h&gt;/* determine range of types */int main()&#123;/* signed types*/printf("signed char min = %d\n",SCHAR_MIN);printf("signed char max = %d\n",SCHAR_MAX);printf("signed short min = %d\n",SHRT_MIN);printf("signed short max = %d\n",SHRT_MAX);printf("signed int min = %d\n",INT_MIN);printf("signed int max = %d\n",INT_MAX);printf("signed long min = %ld\n",LONG_MIN);printf("signed long max = %ld\n",LONG_MAX);/* unsigned types*/printf("unsigned char max = %u\n",UCHAR_MAX);printf("unsigned short max = %u\n",USHRT_MAX);printf("unsigned int max = %u\n",UINT_MAX);printf("unsigned long max = %lu\n",ULONG_MAX);return 0;&#125; signed char min = -128signed char max = 127signed short min = -32768signed short max = 32767signed int min = -2147483648signed int max = 2147483647signed long min = -9223372036854775808signed long max = 9223372036854775807unsigned char max = 255unsigned short max = 65535unsigned int max = 4294967295unsigned long max = 18446744073709551615 1234567891011121314151617181920212223242526272829303132/*方案二*/#include &lt;stdio.h&gt;/*determine ranges of types*/int main()&#123;/*signed types*/printf("signed char min = %d\n",-(char)((unsigned char) ~0 &gt;&gt; 1)-1);printf("signed char max = %d\n",(char)((unsigned char) ~0 &gt;&gt; 1));printf("signed short min = %d\n",-(short)((unsigned short) ~0 &gt;&gt; 1)-1);printf("signed short max = %d\n",(short)((unsigned short) ~0 &gt;&gt; 1));printf("signed int min = %d\n",-(int)((unsigned int) ~0 &gt;&gt; 1)-1);printf("signed int max = %d\n",(int)((unsigned int) ~0 &gt;&gt; 1));printf("signed long min = %ld\n",-(long)((unsigned long) ~0 &gt;&gt; 1)-1);printf("signed long max = %ld\n",(long)((unsigned long) ~0 &gt;&gt; 1));/*unsigned types*/printf("unsigned char max = %u\n",(unsigned char) ~0 );printf("unsigned short max = %u\n",(unsigned short) ~0 );printf("unsigned int max = %u\n",(unsigned int) ~0 );printf("unsigned long max = %lu\n",(unsigned long) ~0 );return 0;&#125; signed char min = -128signed char max = 127signed short min = -32768signed short max = 32767signed int min = -2147483648signed int max = 2147483647signed long min = -9223372036854775808signed long max = 9223372036854775807unsigned char max = 255unsigned short max = 65535unsigned int max = 4294967295unsigned long max = 18446744073709551615 22.3 常量Constants类似1234的integer constants属于int类型。long类型的integer constants常以l或L结尾，如123456789L。如果一个integer太大以至于无法用int类型表示时，也被当作long类型处理。unsigned constants常以字母u，U结尾。后缀ul或UL表明是unsigned long类型。floating-point constants如1.234或1e-2，两者都有也可。没有后缀的浮点数为double类型，后缀f或F表示float类型，后缀l或L表示long double类型 integer octal decimal hexadecimal prefix 0 0x或0X integer适用long/unsigned long)的L和UL的suffixcharacter constant是integer，书写时要添加’’，每个character constant都按照不同的字符集对应一个具体的value，可以相互比较，也可参与numeric operations。某些characters可以通过转义字符序列(escape sequences)表示为character constants或string constants。比如’\n’举个粒子：标准ASCII共8个二进制数组合而成，因为首项必须为0(首项为1的称为扩展ASCII码)，因此可以代表128种字符。 \ooo值的是3个八进制数的组合，\xhh中的hh指的是2个十六进制数的组合 escape sequences \ooo \xhh 纵向制表符vertical tab \v \013 \xb 响铃符alert character \a \007 \x7 常量表达式 12345#define MALINE 1000char line[MAXLINE+1];#define LEAP 1/*闰年*/int days[31+28+LEAP+31+30+31+30+31+31+30+31+30+31]; 从技术角度看，string constants就是an array of characters，不同的是string constangs内部使用\0作为它的结尾。标准库函数strlen(s)可以返回字符串参数s的长度，但不包括结尾的\0。 设计的strlen函数的一个版本12345678910\*strlen函数：返回s的长度*\int strlen(char s[])&#123;int i;i=0;while(s[i] != &apos;\0&apos;)++i;return i;&#125; 辨析:&#39;x&#39;和&quot;x&quot;前者是一个整数，它的值是字母x在机器字符集种对应的数，而后者是包含character(letter x)并且以\0结尾的字符数组an array of characters 枚举常量是另外一种类型的常量。枚举是一个常量整形值的列表， 12345678\*没有显式说明的情况下，`enum`类型中第一枚举名的值为0，第二个为1，依次类推。*\enum boolean &#123;NO, YES&#125;;enum escapes &#123;ALERT = &apos;\a&apos;, BACKSPACE = &apos;\b&apos;, TAB = &apos;\t&apos;,NEWLINE = &apos;\n&apos;, VTAB = &apos;\v&apos;, RETURN = &apos;\r&apos; &#125;;\*只指定了部分枚举名的值，那么未指定值的枚举名的值将依着最后一个指定值向后递增。*\enum months &#123;JAN = 1, FEB, MAR, APR, MAY, JUN,JUL, AUG, SEP, OCT, NOV, DEC &#125;; #define和enum对常量的适用各有优劣。 2.4 声明Declarations1234567# include&lt;stdio.h&gt;int main()&#123;char a = 'a';printf("%c", a);return 0;&#125; a]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
